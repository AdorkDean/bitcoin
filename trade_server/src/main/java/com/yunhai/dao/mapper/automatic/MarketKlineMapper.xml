<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunhai.dao.automatic.MarketKlineMapper" >
  <resultMap id="BaseResultMap" type="com.yunhai.model.automatic.MarketKline" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="moneyType" property="moneytype" jdbcType="VARCHAR" />
    <result column="symbol" property="symbol" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="DATE" />
    <result column="openPrice" property="openprice" jdbcType="DECIMAL" />
    <result column="endPrice" property="endprice" jdbcType="DECIMAL" />
    <result column="highPrice" property="highprice" jdbcType="DECIMAL" />
    <result column="lowPrice" property="lowprice" jdbcType="DECIMAL" />
    <result column="volume" property="volume" jdbcType="DECIMAL" />
    <result column="platform" property="platform" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, moneyType, symbol, date, openPrice, endPrice, highPrice, lowPrice, volume, platform, 
    createtime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yunhai.model.automatic.MarketKlineExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from market_kline
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from market_kline
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from market_kline
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yunhai.model.automatic.MarketKlineExample" >
    delete from market_kline
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yunhai.model.automatic.MarketKline" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into market_kline (moneyType, symbol, date, 
      openPrice, endPrice, highPrice, 
      lowPrice, volume, platform, 
      createtime)
    values (#{moneytype,jdbcType=VARCHAR}, #{symbol,jdbcType=VARCHAR}, #{date,jdbcType=DATE}, 
      #{openprice,jdbcType=DECIMAL}, #{endprice,jdbcType=DECIMAL}, #{highprice,jdbcType=DECIMAL}, 
      #{lowprice,jdbcType=DECIMAL}, #{volume,jdbcType=DECIMAL}, #{platform,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.yunhai.model.automatic.MarketKline" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into market_kline
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="moneytype != null" >
        moneyType,
      </if>
      <if test="symbol != null" >
        symbol,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="openprice != null" >
        openPrice,
      </if>
      <if test="endprice != null" >
        endPrice,
      </if>
      <if test="highprice != null" >
        highPrice,
      </if>
      <if test="lowprice != null" >
        lowPrice,
      </if>
      <if test="volume != null" >
        volume,
      </if>
      <if test="platform != null" >
        platform,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="moneytype != null" >
        #{moneytype,jdbcType=VARCHAR},
      </if>
      <if test="symbol != null" >
        #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=DATE},
      </if>
      <if test="openprice != null" >
        #{openprice,jdbcType=DECIMAL},
      </if>
      <if test="endprice != null" >
        #{endprice,jdbcType=DECIMAL},
      </if>
      <if test="highprice != null" >
        #{highprice,jdbcType=DECIMAL},
      </if>
      <if test="lowprice != null" >
        #{lowprice,jdbcType=DECIMAL},
      </if>
      <if test="volume != null" >
        #{volume,jdbcType=DECIMAL},
      </if>
      <if test="platform != null" >
        #{platform,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yunhai.model.automatic.MarketKlineExample" resultType="java.lang.Integer" >
    select count(*) from market_kline
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update market_kline
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.moneytype != null" >
        moneyType = #{record.moneytype,jdbcType=VARCHAR},
      </if>
      <if test="record.symbol != null" >
        symbol = #{record.symbol,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.openprice != null" >
        openPrice = #{record.openprice,jdbcType=DECIMAL},
      </if>
      <if test="record.endprice != null" >
        endPrice = #{record.endprice,jdbcType=DECIMAL},
      </if>
      <if test="record.highprice != null" >
        highPrice = #{record.highprice,jdbcType=DECIMAL},
      </if>
      <if test="record.lowprice != null" >
        lowPrice = #{record.lowprice,jdbcType=DECIMAL},
      </if>
      <if test="record.volume != null" >
        volume = #{record.volume,jdbcType=DECIMAL},
      </if>
      <if test="record.platform != null" >
        platform = #{record.platform,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update market_kline
    set id = #{record.id,jdbcType=BIGINT},
      moneyType = #{record.moneytype,jdbcType=VARCHAR},
      symbol = #{record.symbol,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=DATE},
      openPrice = #{record.openprice,jdbcType=DECIMAL},
      endPrice = #{record.endprice,jdbcType=DECIMAL},
      highPrice = #{record.highprice,jdbcType=DECIMAL},
      lowPrice = #{record.lowprice,jdbcType=DECIMAL},
      volume = #{record.volume,jdbcType=DECIMAL},
      platform = #{record.platform,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunhai.model.automatic.MarketKline" >
    update market_kline
    <set >
      <if test="moneytype != null" >
        moneyType = #{moneytype,jdbcType=VARCHAR},
      </if>
      <if test="symbol != null" >
        symbol = #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=DATE},
      </if>
      <if test="openprice != null" >
        openPrice = #{openprice,jdbcType=DECIMAL},
      </if>
      <if test="endprice != null" >
        endPrice = #{endprice,jdbcType=DECIMAL},
      </if>
      <if test="highprice != null" >
        highPrice = #{highprice,jdbcType=DECIMAL},
      </if>
      <if test="lowprice != null" >
        lowPrice = #{lowprice,jdbcType=DECIMAL},
      </if>
      <if test="volume != null" >
        volume = #{volume,jdbcType=DECIMAL},
      </if>
      <if test="platform != null" >
        platform = #{platform,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunhai.model.automatic.MarketKline" >
    update market_kline
    set moneyType = #{moneytype,jdbcType=VARCHAR},
      symbol = #{symbol,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE},
      openPrice = #{openprice,jdbcType=DECIMAL},
      endPrice = #{endprice,jdbcType=DECIMAL},
      highPrice = #{highprice,jdbcType=DECIMAL},
      lowPrice = #{lowprice,jdbcType=DECIMAL},
      volume = #{volume,jdbcType=DECIMAL},
      platform = #{platform,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=DATE}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>